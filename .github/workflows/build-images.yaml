name: Build and push image

on:
  push:
    branches:
      - 'main'
      - 'master'
  workflow_dispatch: {}

env:
  IMG_TAGS: ${{ github.sha }}
  IMG_REGISTRY_HOST: quay.io
  IMG_REGISTRY_ORG: kuadrant
  MAIN_BRANCH_NAME: main

jobs:
  build:
    name: Build and push image
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Add latest tag
        if: ${{ github.ref_name == env.MAIN_BRANCH_NAME }}
        id: add-latest-tag
        run: |
          echo "IMG_TAGS=latest ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Add branch tag
        if: ${{ github.ref_name != env.MAIN_BRANCH_NAME }}
        id: add-branch-tag
        run: |
          echo "IMG_TAGS=${GITHUB_REF_NAME/\//-} ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Set Authorino version
        id: authorino-version
        run: |
          echo "version=latest" >> $GITHUB_ENV
      - name: Set Authorino git sha
        id: authorino-git-sha
        run: |
          if [[ ${GITHUB_REF_NAME/\//-} =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-.+)?$ ]]; then
          echo "version=${GITHUB_REF_NAME/\//-}" >> $GITHUB_ENV
          else
          echo "GIT_SHA=${{ github.sha }}" >> $GITHUB_ENV
          fi
      - name: Set Authorino Dirty
        id: authorino-dirty
        run: |
          GIT_DIRTY=$(git diff --stat); \
          if [ -n "$GIT_DIRTY" ]; then \
            DIRTY="true"; \
          else \
            DIRTY="false"; \
          fi; \
          echo "DIRTY=$DIRTY" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: authorino
          tags: ${{ env.IMG_TAGS }}
          platforms: linux/amd64,linux/arm64,linux/s390x,linux/ppc64le
          build-args: |
            GIT_SHA=${{ env.GIT_SHA }}
            version=${{ env.VERSION }}
            DIRTY=${{ env.DIRTY }}
          containerfiles: |
            ./Dockerfile
      - name: Push Image
        if: ${{ !env.ACT }}
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
      - name: Print Image URL
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
